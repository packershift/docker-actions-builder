---
# tasks file for roles/generate-actions

# sysadm User account management with UID and GID
- name: Setting up UID
  when: lookup('env', 'PUID')
  user:
    name: sysadm
    non_unique: yes
    uid: "{{ lookup('env', 'PUID') | int }}"

- name: Setting up GID
  when: lookup('env', 'PGID')
  group:
    name: sysadm
    non_unique: yes
    gid: "{{ lookup('env', 'PGID') | int }}"

# Download and grab the variables from Github
- name: Download variables from project workspace
  when: lookup('env', 'LOCAL') != "true"
  get_url:
    url: "https://raw.githubusercontent.com/{{ organization }}/docker-{{ container_name }}/{{ branch }}/{{ item }}"
    dest: "/tmp/{{ item }}"
  loop: "{{  templated_vars  }}"

- name: Include variables files for this project
  include_vars:
    file: "/tmp/{{ item }}"
  loop: "{{  templated_vars  }}"

- name: Include template loop variables
  include_vars:
    file: "/ansible/roles/generate-actions/templates.yml"

# Directory managemnet
- name: Create destination directory for generated github actions
  when: lookup('env', 'LOCAL') != "true"
  file:
    path: "github/{{ project_repo_name }}"
    state: directory
    owner: sysadm
    group: sysadm

- name: Create destination directory for generated github files
  when: lookup('env', 'LOCAL') == "true"
  file:
    path: "/tmp/.github"
    state: directory
    owner: sysadm
    group: sysadm

- name: Create destination directory for generated github files
  when: lookup('env', 'LOCAL') != "true"
  file:
    path: "github/{{ project_repo_name }}/.github"
    state: directory
    owner: sysadm
    group: sysadm

- name: Create destination directory for generated github workflows files
  when: lookup('env', 'LOCAL') == "true"
  file:
    path: "/tmp/.github/workflows"
    state: directory
    owner: sysadm
    group: sysadm

- name: Create destination directory for generated github workflows files
  when: lookup('env', 'LOCAL') != "true"
  file:
    path: "github/{{ project_repo_name }}/.github/workflows"
    state: directory
    owner: sysadm
    group: sysadm

- name: Create destination directory for generated github ISSUE_TEMPLATE files
  when: lookup('env', 'LOCAL') == "true"
  file:
    path: "/tmp/.github/ISSUE_TEMPLATE"
    state: directory
    owner: sysadm
    group: sysadm

- name: Create destination directory for generated github ISSUE_TEMPLATE files
  when: lookup('env', 'LOCAL') != "true"
  file:
    path: "github/{{ project_repo_name }}/.github/ISSUE_TEMPLATE"
    state: directory
    owner: sysadm
    group: sysadm

- name: Create destination directory for generated donate.txt
  when:
    - lookup('env', 'LOCAL') == "true"
    - sponsor_links is defined
  file:
    path: "/tmp/root"
    state: directory
    owner: sysadm
    group: sysadm

- name: Create destination directory for generated donate.txt
  when:
    - lookup('env', 'LOCAL') != "true"
    - sponsor_links is defined
  file:
    path: "github/{{ project_repo_name }}/root"
    state: directory
    owner: sysadm
    group: sysadm

- name: Create destination directory for generated 99-deprecation
  when:
    - lookup('env', 'LOCAL') == "true"
    - project_deprecation_status == true
  file:
    path: "/tmp/root/etc/cont-init.d"
    state: directory
    owner: sysadm
    group: sysadm

- name: Create destination directory for generated 99-deprecation
  when:
    - lookup('env', 'LOCAL') != "true"
    - project_deprecation_status == true
  file:
    path: "github/{{ project_repo_name }}/root/etc/cont-init.d"
    state: directory
    owner: sysadm
    group: sysadm

- name: Create destination directory for generated external files
  when:
    - lookup('env', 'LOCAL') == "true"
  file:
    path: "/tmp/.github-external"
    state: directory
    owner: sysadm
    group: sysadm

- name: Create destination directory for generated external files
  when:
    - lookup('env', 'LOCAL') != "true"
  file:
    path: "github/{{ project_repo_name }}/.github-external"
    state: directory
    owner: sysadm
    group: sysadm

- name: Create symbolic link for legacy pathing
  when: lookup('env', 'LOCAL') != "true"
  shell: "ln -s {{ project_repo_name }} {{ project_name }}"
  args:
    chdir: /ansible/github

# Looping all the templates
- name: Write templates
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.readme is not defined
    - item.donate is not defined
    - item.deprecation is not defined
    - item.unraid_template is not defined
    - item.package_trigger is not defined
    - item.external_trigger is not defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "github/{{ project_repo_name }}/{{ item.dest }}"
    owner: sysadm
    group: sysadm
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: Write templates local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.readme is not defined
    - item.donate is not defined
    - item.deprecation is not defined
    - item.unraid_template is not defined
    - item.package_trigger is not defined
    - item.external_trigger is not defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
    owner: sysadm
    group: sysadm
  delegate_to: localhost
  loop: "{{  templated_files  }}"

# ReadMe templating
- name: Write ReadMe normal
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.readme is defined
    - full_custom_readme is not defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "github/{{ project_repo_name }}/{{ item.dest }}"
    owner: sysadm
    group: sysadm
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: Write ReadMe normal local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.readme is defined
    - full_custom_readme is not defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
    owner: sysadm
    group: sysadm
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: Write ReadMe full custom
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.readme is defined
    - full_custom_readme is defined
  template:
    src: "../templates/{{ item.src }}-CUSTOM"
    dest: "github/{{ project_repo_name }}/{{ item.dest }}"
    owner: sysadm
    group: sysadm
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: Write ReadMe full custom local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.readme is defined
    - full_custom_readme is defined
  template:
    src: "../templates/{{ item.src }}-CUSTOM"
    dest: "/tmp/{{ item.dest }}"
    owner: sysadm
    group: sysadm
  delegate_to: localhost
  loop: "{{  templated_files  }}"

# Donation links templating
- name: Write donation links
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.donate is defined
    - sponsor_links is defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "github/{{ project_repo_name }}/{{ item.dest }}"
    owner: sysadm
    group: sysadm
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: Write donation links local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.donate is defined
    - sponsor_links is defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
    owner: sysadm
    group: sysadm
  delegate_to: localhost
  loop: "{{  templated_files  }}"

# Deprecation init script templating
- name: Write deprecation init script
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.deprecation is defined
    - project_deprecation_status == true
  template:
    src: "../templates/{{ item.src }}"
    dest: "github/{{ project_repo_name }}/{{ item.dest }}"
    owner: sysadm
    group: sysadm
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: Write deprecation init script local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.deprecation is defined
    - project_deprecation_status == true
  template:
    src: "../templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
    owner: sysadm
    group: sysadm
  delegate_to: localhost
  loop: "{{  templated_files  }}"

# Unraid template templating
- name: Write Unraid template
  when:
    - lookup('env', 'LOCAL') != "true"
    - unraid_template
    - item.unraid_template is defined
    - full_custom_readme is not defined
    - '"baseimage" not in project_name'
    - '"github-builder" not in project_name'
  template:
    src: "../templates/{{ item.src }}"
    dest: "github/{{ project_repo_name }}/{{ item.dest }}"
    owner: sysadm
    group: sysadm
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: Write Unraid template local
  when:
    - lookup('env', 'LOCAL') == "true"
    - unraid_template
    - item.unraid_template is defined
    - full_custom_readme is not defined
    - '"baseimage" not in project_name'
    - '"github-builder" not in project_name'
  template:
    src: "../templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
    owner: sysadm
    group: sysadm
  delegate_to: localhost
  loop: "{{  templated_files  }}"

# Package trigger templating
- name: Write package trigger
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.package_trigger is defined
    - custom_package_trigger != true
  template:
    src: "../templates/{{ item.src }}"
    dest: "github/{{ project_repo_name }}/{{ item.dest }}"
    owner: sysadm
    group: sysadm
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: Write package trigger local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.package_trigger is defined
    - custom_package_trigger != true
  template:
    src: "../templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
    owner: sysadm
    group: sysadm
  delegate_to: localhost
  loop: "{{  templated_files  }}"

# External trigger templating
- name: Write external trigger
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.external_trigger is defined
    - custom_external_trigger != true
  template:
    src: "../templates/{{ item.src }}"
    dest: "github/{{ project_repo_name }}/{{ item.dest }}"
    owner: sysadm
    group: sysadm
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: Write external trigger local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.external_trigger is defined
    - custom_external_trigger != true
  template:
    src: "../templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
    owner: sysadm
    group: sysadm
  delegate_to: localhost
  loop: "{{  templated_files  }}"

#  For build CI Jobs not running as Root 
- name: Allow non root host to delete temp files
  when:
    - lookup('env', 'LOCAL') != "true"
  command: chmod -R 777 /ansible/github
  delegate_to: localhost
